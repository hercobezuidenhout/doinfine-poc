name: Build and deploy .NET API

on:
  push:
    branches: [ "main", "develop"]

    # paths:
    #   - api/**

env:
  AZURE_WEBAPP_NAME: dev-api-team-lunch    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: './api/TeamLunch'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '6.0.x'           # set this to the dot net version to use

defaults:
  run:
    working-directory: api

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

    - name: Test
      run: dotnet test

    - name: Install EF Tool
      run: |
          dotnet new tool-manifest
          dotnet tool install dotnet-ef
      
    - name: Generate scripts
      run: dotnet ef migrations script --output /sql/sql-script.sql --idempotent --context DataContext
      working-directory: api/TeamLunch

    - name: Azure SQL Deploy
      working-directory: api/TeamLunch
      uses: Azure/sql-action@v1
      with:
        # Name of the Azure SQL Server name, like Fabrikam.database.windows.net.
        server-name: tcp:teamlunchdb.database.windows.net
        # The connection string, including authentication information, for the Azure SQL Server database.
        connection-string: ${{ secrets.SQL_CONNECTION_STRING }}
        # Path to SQL script file to deploy
        sql-file: /sql/sql-script.sql

    - name: Publish
      run: dotnet publish -c Release -o build
      working-directory: api/TeamLunch

    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/build'
